/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.parking.model.buildings;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentLinkedDeque;
import lombok.Data;
import org.parking.model.vehicles.Automobile;
import org.parking.model.vehicles.impl.Car;
import org.parking.model.vehicles.impl.Motorbike;

@Data
public class Parking {

  private final List<Class<? extends Automobile>> acceptableAutoTypeList = List.of(Car.class, Motorbike.class);
  private final int carPoolSize = 1000;
  private final int entranceAmount = 4;
  private final int parkingLevels = 4;
  private final int getParkingLevelSize = 25;
  private final int parkingSize = parkingLevels * getParkingLevelSize;
  private boolean isOpen = true;

  private final ConcurrentHashMap<Spot, Automobile> parkingSpots = new ConcurrentHashMap<>();
  private final List<Entrance> entrances = new ArrayList<>();

  private final ConcurrentLinkedDeque<Automobile> carPool = new ConcurrentLinkedDeque<>();


  public void pushAutomobile(Automobile automobile, Spot spot) {
    parkingSpots.put(spot, automobile);
  }

  public Automobile autoComesFromTheRealWorld() {
    return carPool.removeFirst();
  }

  public void pushCarToPool(Automobile automobile) {
    carPool.addFirst(automobile);
  }

  public int getNumberOfFreeSpots() {
    return parkingSpots.size();
  }

}
